Project:
    * разобратьс€ с неуправл€емыми ресурсами;
    * пройтись мо неймингу методов, полей, аргументов;
    * изменить обозначение .t формата;
    * оптимизаци€ проверки услови€ ƒелоне во всех алогритмах;
    * избавитьс€ от Edge либо от Section;
    * выбросить неиспользуемые файлы;
    * определить максимальное разрешение дл€ исходного изображени€;
    * добавить ведение лога тестов (— ќ, ќ“, ѕорог);
    * использование LockBits вместо GetPixel() и SetPixel().

MainForm.cs:
    * валидаци€ воодимых значений;
    * обработать попытку перезаписи открытого файла изображени€;
    * сконфигурировать алгоритмы дл€ отрисовки аппроксимации из .t файла;
    * дебаг интерфейса;
    * вынести дефолтные значени€ настроек в константы;
    * убрать пункт "¬ыберите алгоритм";
    * рассмотреть хранение ќ“ в List<>;
    * гибкие PictureBox под произвольные соотношени€ сторон.

SearchInTriangle.cs:
    * попробовать избавитьс€ от этапа локализации;
    * при проверке медианы не об€зательно предварительно считать всю пр€мую;
    * многопоточность дл€ поиска внутри новых треугольников.

Section.cs:
    * избавитьс€ от length.

SectorPPMaker.cs:
    * добавить многопоточность.

TriangleGradientShader.cs:
    * пропуск точекмежду треугольниками;
    * многопоточность.

VerticesAverageBrightnessShader.cs:
    * многопоточность.

DCIterativeTriangulation.cs:
    * распространить на изображени€ произвольного разрешени€;
    * не создавать в DelanayBuilder каждый раз новые bufTriangle;
    * каша с использованием буферных треугольников при создании новых (не использовать буферные дл€ cur и cur2).

SimpleIterativeTriangulation.cs:
    * распространить на изображени€ произвольного разрешени€.

StripIterativeTriangulation.cs:
    * распространить на изображени€ произвольного разрешени€.

Geometry.cs:
    * не считать всю пр€мую в MiddlePixel.

TExtension.cs:
    * передавать размер изображени€ дл€ Striping;
    * реализовать асинхронность записи.